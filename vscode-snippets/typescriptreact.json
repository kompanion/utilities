{
	"Stateful component": {
		"prefix": "rsf",
		"body": [
			"import * as React from 'react';",
			"",
			"export interface I${1:Component}Props {",
				"\t",
			"}",
			"",
			"export interface I${1:Component}State {",
				"\t",
			"}",
			"",
			"export class ${1:Component} extends React.Component<I${1:Component}Props,I${1:Component}State> {",
				"\tconstructor(props: I${1:Component}Props) {",
					"\t\tsuper(props)",
					"\t\tthis.state = {}",
				"\t}",
				"\tpublic render () {",
					"\t\treturn (",
						"\t\t\t<>$2</>",
					"\t\t)",
				"\t}",
			"}",
			"",
			"export default ${1:Component};"
		],
		"description": "Stateful typescript react component with interfaces for props and state"
	},
	"Stateless component": {
		"prefix": "rsl",
		"body": [
			"import * as React from 'react';",
			"",
			"export interface I${1:Component}Props {",
			"\t",
			"}",
			"",
			"export const ${1:Component}: React.SFC<I${1:Component}Props> = props => {",
			"\treturn (",
			"\t\t<>$2</>",
			"\t)",
			"}",
			"",
			"${1:Component}.displayName = '${1:Component}'",
			"",
			"export default ${1:Component};"
		],
		"description": "Stateless typescript react component with interfaces"
	},
	"Stateless component without interfaces": {
		"prefix": "rslNoInterface",
		"body": [
			"import * as React from 'react';",
			"",
			"export const ${1:Component}: React.SFC<{}> = () => {",
			"\treturn (",
			"\t\t<>$2</>",
			"\t)",
			"}",
			"",
			"${1:Component}.displayName = '${1:Component}'",
			"",
			"export default ${1:Component};"
		],
		"description": "Stateless typescript react component without interfaces"
	},
	"Stateful component w/ styled-components": {
		"prefix": "rsfsc",
		"body": [
			"import * as React from 'react';",
			"import styled from 'styled-components';",
			"",
			"export interface I${1:Component}Props {",
				"\t",
			"}",
			"",
			"export interface I${1:Component}State {",
				"\t",
			"}",
			"",
			"const ${2:Styled} = styled.div``",
			"",
			"export class ${1:Component} extends React.Component<I${1:Component}Props,I${1:Component}State> {",
				"\tstate = {",
					"\t\t",
				"\t}",
				"\tpublic render () {",
					"\t\treturn (",
						"\t\t\t<${2:Styled}>$3</${2:Styled}>",
					"\t\t)",
				"\t}",
			"}",
			"",
			"export default ${1:Component};"
		],
		"description": "Stateful typescript react component with styled-components for styling."
	},
	"Stateless component w/ styled-components": {
		"prefix": "rslsc",
		"body": [
			"import * as React from 'react';",
			"import styled from 'styled-components';",
			"",
			"export interface I${1:Component}Props {",
			"\t",
			"}",
			"",
			"const ${2:Styled} = styled.div``",
			"",
			"export const ${1:Component}: React.SFC<I${1:Component}Props> = props => {",
			"\treturn (",
			"\t\t<${2:Styled}>$3</${2:Styled}>",
			"\t)",
			"}",
			"",
			"${1:Component}.displayName = '${1:Component}'",
			"",
			"export default ${1:Component};"
		],
		"description": "Stateless typescript react component with styled components for styling."
	},
	"Basic Interface": {
		"description": "Basic Interface",
		"prefix": "tsInt",
		"body": [
			"export interface I${1:interface} {",
				"\t${2:property}: ${3:any};",
			"}"
		]
	},
	"Basic Type": {
		"description": "Basic TS Type",
		"prefix": "tsType",
		"body": [
			"export type T${1:type} = ${2:any}"
		]
	},
	"Logger": {
		"description": "Console log with separators",
		"prefix": "logg",
		"body": [
			"console.log('============================')",
			"console.log('============================')",
			"console.log(${1:log})",
			"console.log('============================')",
			"console.log('============================')",
		]
	}
}